syntax = "proto3";
package graph.reflection;
option (ext.owner) = "IDL Tools";

import "google/protobuf/wrappers.proto";
import "reflection/other/entities.proto";
import "reflection/ext/api.proto";
import "reflection/ext/data.proto";

message RootMessage {
    option (ext.annotated) = true;

    message NestedMessage {}

    enum NestedEnum {
        option (ext.ext) = {};

        ZERO = 0 [(ext.numbers) = 1];
        ONE = 1;
        TWO = 2;
    }

    NestedMessage nested_msg = 1 [(ext.name) = "reflection"];
    NestedEnum nested_enum = 2;

    other.Message other_msg = 3;
    other.Enum other_enum = 4;

    oneof union {
        option (ext.float) = 5.67;

        bool boolean = 5;
        string str = 6;
        bytes data = 7;
    }

    repeated NestedMessage rep_msg = 8;
    repeated RootEnum rep_enum = 9;
    repeated double rep_scalar = 10;

    map<string, string> scalar_map = 11;
    map<string, RootMessage> recursive_map = 12;
    map<string, NestedEnum> enum_map = 13;

    google.protobuf.StringValue wkt = 14;
}

enum RootEnum {
    ZERO = 0;
    ONE = 1;
    TWO = 2;
}

message Request {
}

message Response {
}

service API {
    option (ext.host) = "Alex Trebek";

    rpc Do (Request) returns (Response) {
        option (ext.header) = "X-Foo=BAR";
    }

    rpc Client (stream Request) returns (Response);
    rpc Server (Request) returns (stream Response);
    rpc BiDi (stream Request) returns (stream Response);
}
